name: tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 19 * * SUN'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [3.6, 3.7, 3.8, 3.9]
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0} 
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENV_NAME: "nbsmoke"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: conda setup
        run: |
          conda install -c pyviz "pyctdev>=0.5"
          conda create -n ${{ env.ENV_NAME }}
          conda activate ${{ env.ENV_NAME }}
          conda config --env --prepend channels pyviz
          conda install python=${{ matrix.python-version }} pyctdev
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit develop_install -o all
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit env_capture
      - name: doit test_lint
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit test_lint
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate ${{ env.ENV_NAME }}
          doit test_unit
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
